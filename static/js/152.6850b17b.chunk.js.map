{"version":3,"file":"static/js/152.6850b17b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/filter.module.css?e01c","redux/selectors.js","components/ContactList/contactlist.jsx","components/Filter/filter.jsx","webpack://react-homework-template/./src/components/Phonebook/phonebook.module.css?5245","components/Phonebook/phonebook.jsx","pages/Contacts/myContacts.jsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"filter_box__ItjS7\",\"btn\":\"filter_btn__vMALR\",\"h2\":\"filter_h2__b8R06\"};","export const selectContacts = state => state.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\nexport const selectFilterdContacts = ({ contacts, filter }) => {\n\n    if (!filter) {\n        return contacts.items;\n    }\n    const normalizedFilter = filter.toLocaleLowerCase();\n    const filterdContacts = contacts.items.filter(({ name, number }) => {\n        const normalizedName = name.toLocaleLowerCase();\n        const normalizedNumber = number.toLocaleLowerCase();\n        const result = normalizedName.includes(normalizedFilter) || normalizedNumber.includes(normalizedFilter);\n        return result;\n    })\n    return filterdContacts;\n}\n","import style from 'components/Filter/filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport { deleteContact } from 'redux/operation/operation';\nimport { selectFilterdContacts } from 'redux/selectors';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Notify } from 'notiflix';\n\nexport default function ContactList() {\n    // const { isLoading } = useSelector(selectContacts);\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectFilterdContacts);\n    // const { isLoading } = useSelector(selectContacts);\n\n    const removeContact = id => {\n        const action = deleteContact(id);\n        dispatch(action);\n        if (contacts.length === 1) {\n            dispatch(setFilter(''));\n\n            Notify.warning('No more contacts matching the filter.');\n        }\n    };\n\n    const elem = contacts.map(({ name, number, id }) => {\n        return (\n            <li key={id}>\n                {' '}\n                {name} , {number}\n                <DeleteIcon\n                    className={style.icon}\n                    color=\"error\"\n                    size=\"small\"\n                    fontSize=\"inherit\"\n                    onClick={() => removeContact(id)}\n                />\n            </li>\n        );\n    });\n    return (\n        <div className={style.box}>\n            <h3>Contacts</h3>\n            <ol>{elem}</ol>\n        </div>\n    );\n}\n","import style from 'components/Filter/filter.module.css'\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nanoid } from 'nanoid';\nimport { selectFilter } from \"redux/selectors\";\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\n\n\nexport function FilterContacts() {\n\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const filterId = nanoid();\n\n  const handleChange = (evt) => {\n    const { value } = evt.target;\n    dispatch(setFilter(value));\n  }\n\n  return (\n    <div className={style.box}>\n\n\n      <p className={style.name}>  Find contacts by name </p>\n      <InputLabel htmlFor=\"filterId\">\n\n      </InputLabel>\n      <Input type=\"text\"\n        name=\"filter\"\n        value={filter}\n        placeholder=\"Find contacts\"\n        onChange={handleChange}\n        id={filterId} />\n\n    </div>)\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"phonebook_box__-6seW\",\"h1\":\"phonebook_h1__ld5zO\"};","\nimport { nanoid } from 'nanoid';\nimport style from 'components/Phonebook/phonebook.module.css'\nimport { useState } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { addContact } from 'redux/operation/operation';\nimport { useMemo } from \"react\";\nimport { fetchContacts } from 'redux/operation/operation';\nimport { useEffect } from 'react';\nimport { useAuth } from 'shared/useAuth';\nimport { Navigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\n\nfunction Phonebook() {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n  const dispatch = useDispatch();\n\n  const isLogin = useAuth();\n\n\n  const nameId = useMemo(() => nanoid(), []);\n  const numberId = useMemo(() => nanoid(), []);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  const onAddContact = (contacts) => {\n    const action = addContact(contacts);\n    console.log(\"contact\", contacts);\n\n    dispatch(action);\n  }\n\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onAddContact({ name, number });\n    setName(\"\");\n    setPhone(\"\");\n  }\n\n  if (!isLogin) {\n    return <Navigate to={'/login'} />;\n  }\n\n  return (\n    <div className={style.box}>\n      <h1>Phonebook</h1>\n\n      <form onSubmit={handleSubmit}>\n        <div className={style.label}>\n          <InputLabel htmlFor=\"nameId\">\n            Name\n          </InputLabel >\n          <Input\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            type=\"text\"\n            id={nameId}\n            name=\"name\"\n            value={name}\n\n            onChange={handleChange}\n            className={style.input}\n          />\n        </div>\n\n        <div>\n\n          <InputLabel htmlFor=\"numberId\">\n            Number\n          </InputLabel>\n          <Input\n\n            type=\"tel\"\n            name=\"number\"\n            id={numberId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n\n            onChange={handleChange}\n            className={style.input}\n          />\n        </div>\n\n        <Button type=\"submit\" variant=\"outlined\" size=\"small\" >Add contact</Button>\n      </form>\n    </div >\n  )\n\n}\nexport default Phonebook;","\nimport ContactList from \"components/ContactList/contactlist\";\nimport { FilterContacts } from \"components/Filter/filter\";\nimport Phonebook from \"components/Phonebook/phonebook\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading } from \"redux/selectors\";\nimport { selectError } from \"redux/selectors\";\n\n\n\nconst MyContactsPage = () => {\n\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n\n    return (\n        <div\n            // style={{\n            //     width: '100%',\n            //     minHeight: '100vh',\n            //     margin: '0 auto',\n            //     paddingLeft: '40px',\n            //     paddingRight: '40px',\n            //     backgroundSize: '20px 20px',\n            //     background: '#d4d5d6 ',\n            //     fontSize: '30px'\n\n            // }}\n        >\n\n            <Phonebook />\n            <FilterContacts />\n            {isLoading && !error && <p style={{ color: \"tomato\" }}>Loading...</p>}\n            <ContactList />\n        </div >\n    )\n\n}\nexport default MyContactsPage;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["selectIsLoading","state","contacts","isLoading","selectError","error","selectFilter","filter","selectFilterdContacts","_ref","items","normalizedFilter","toLocaleLowerCase","_ref2","name","number","normalizedName","normalizedNumber","includes","ContactList","dispatch","useDispatch","useSelector","elem","map","id","_jsxs","children","_jsx","DeleteIcon","className","style","color","size","fontSize","onClick","action","deleteContact","length","setFilter","Notify","removeContact","FilterContacts","filterId","nanoid","InputLabel","htmlFor","Input","type","value","placeholder","onChange","evt","target","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setPhone","isLogin","useAuth","nameId","useMemo","numberId","useEffect","fetchContacts","handleChange","e","_e$target","onSubmit","preventDefault","addContact","console","log","onAddContact","pattern","title","required","Button","variant","Navigate","to","Phonebook","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","arguments","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}